//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.LittleFashion_Kentico13;

[assembly: RegisterDocumentType(InventoryItem.CLASS_NAME, typeof(InventoryItem))]

namespace CMS.DocumentEngine.Types.LittleFashion_Kentico13
{
	/// <summary>
	/// Represents a content item of type InventoryItem.
	/// </summary>
	public partial class InventoryItem : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "LittleFashion_Kentico13.InventoryItem";


		/// <summary>
		/// The instance of the class that provides extended API for working with InventoryItem fields.
		/// </summary>
		private readonly InventoryItemFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// InventoryItemID.
		/// </summary>
		[DatabaseIDField]
		public int InventoryItemID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("InventoryItemID"), 0);
			}
			set
			{
				SetValue("InventoryItemID", value);
			}
		}


		/// <summary>
		/// ProductName.
		/// </summary>
		[DatabaseField]
		public string ProductName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductName"), @"");
			}
			set
			{
				SetValue("ProductName", value);
			}
		}


		/// <summary>
		/// ProductDescription.
		/// </summary>
		[DatabaseField]
		public string ProductDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductDescription"), @"");
			}
			set
			{
				SetValue("ProductDescription", value);
			}
		}


		/// <summary>
		/// ProductPrice.
		/// </summary>
		[DatabaseField]
		public string ProductPrice
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductPrice"), @"");
			}
			set
			{
				SetValue("ProductPrice", value);
			}
		}


		/// <summary>
		/// ProductUrl.
		/// </summary>
		[DatabaseField]
		public string ProductUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductUrl"), @"");
			}
			set
			{
				SetValue("ProductUrl", value);
			}
		}


		/// <summary>
		/// ImageUrl.
		/// </summary>
		[DatabaseField]
		public string ImageUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageUrl"), @"");
			}
			set
			{
				SetValue("ImageUrl", value);
			}
		}


		/// <summary>
		/// ProductStatus.
		/// </summary>
		[DatabaseField]
		public string ProductStatus
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductStatus"), @"");
			}
			set
			{
				SetValue("ProductStatus", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with InventoryItem fields.
		/// </summary>
		[RegisterProperty]
		public InventoryItemFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with InventoryItem fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class InventoryItemFields : AbstractHierarchicalObject<InventoryItemFields>
		{
			/// <summary>
			/// The content item of type InventoryItem that is a target of the extended API.
			/// </summary>
			private readonly InventoryItem mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="InventoryItemFields" /> class with the specified content item of type InventoryItem.
			/// </summary>
			/// <param name="instance">The content item of type InventoryItem that is a target of the extended API.</param>
			public InventoryItemFields(InventoryItem instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// InventoryItemID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.InventoryItemID;
				}
				set
				{
					mInstance.InventoryItemID = value;
				}
			}


			/// <summary>
			/// ProductName.
			/// </summary>
			public string ProductName
			{
				get
				{
					return mInstance.ProductName;
				}
				set
				{
					mInstance.ProductName = value;
				}
			}


			/// <summary>
			/// ProductDescription.
			/// </summary>
			public string ProductDescription
			{
				get
				{
					return mInstance.ProductDescription;
				}
				set
				{
					mInstance.ProductDescription = value;
				}
			}


			/// <summary>
			/// ProductPrice.
			/// </summary>
			public string ProductPrice
			{
				get
				{
					return mInstance.ProductPrice;
				}
				set
				{
					mInstance.ProductPrice = value;
				}
			}


			/// <summary>
			/// ProductUrl.
			/// </summary>
			public string ProductUrl
			{
				get
				{
					return mInstance.ProductUrl;
				}
				set
				{
					mInstance.ProductUrl = value;
				}
			}


			/// <summary>
			/// ImageUrl.
			/// </summary>
			public string ImageUrl
			{
				get
				{
					return mInstance.ImageUrl;
				}
				set
				{
					mInstance.ImageUrl = value;
				}
			}


			/// <summary>
			/// ProductStatus.
			/// </summary>
			public string ProductStatus
			{
				get
				{
					return mInstance.ProductStatus;
				}
				set
				{
					mInstance.ProductStatus = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="InventoryItem" /> class.
		/// </summary>
		public InventoryItem() : base(CLASS_NAME)
		{
			mFields = new InventoryItemFields(this);
		}

		#endregion
	}
}