//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.LittleFashion_Kentico13;

[assembly: RegisterDocumentType(ContactInfo.CLASS_NAME, typeof(ContactInfo))]

namespace CMS.DocumentEngine.Types.LittleFashion_Kentico13
{
	/// <summary>
	/// Represents a content item of type ContactInfo.
	/// </summary>
	public partial class ContactInfo : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "LittleFashion_Kentico13.ContactInfo";


		/// <summary>
		/// The instance of the class that provides extended API for working with ContactInfo fields.
		/// </summary>
		private readonly ContactInfoFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ContactInfoID.
		/// </summary>
		[DatabaseIDField]
		public int ContactInfoID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ContactInfoID"), 0);
			}
			set
			{
				SetValue("ContactInfoID", value);
			}
		}


		/// <summary>
		/// Title.
		/// </summary>
		[DatabaseField]
		public string Title
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Title"), @"");
			}
			set
			{
				SetValue("Title", value);
			}
		}


		/// <summary>
		/// ButtonText.
		/// </summary>
		[DatabaseField]
		public string ButtonText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonText"), @"");
			}
			set
			{
				SetValue("ButtonText", value);
			}
		}


		/// <summary>
		/// ButtonLink.
		/// </summary>
		[DatabaseField]
		public string ButtonLink
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ButtonLink"), @"");
			}
			set
			{
				SetValue("ButtonLink", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Description"), @"");
			}
			set
			{
				SetValue("Description", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ContactInfo fields.
		/// </summary>
		[RegisterProperty]
		public ContactInfoFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ContactInfo fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ContactInfoFields : AbstractHierarchicalObject<ContactInfoFields>
		{
			/// <summary>
			/// The content item of type ContactInfo that is a target of the extended API.
			/// </summary>
			private readonly ContactInfo mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ContactInfoFields" /> class with the specified content item of type ContactInfo.
			/// </summary>
			/// <param name="instance">The content item of type ContactInfo that is a target of the extended API.</param>
			public ContactInfoFields(ContactInfo instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ContactInfoID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ContactInfoID;
				}
				set
				{
					mInstance.ContactInfoID = value;
				}
			}


			/// <summary>
			/// Title.
			/// </summary>
			public string Title
			{
				get
				{
					return mInstance.Title;
				}
				set
				{
					mInstance.Title = value;
				}
			}


			/// <summary>
			/// ButtonText.
			/// </summary>
			public string ButtonText
			{
				get
				{
					return mInstance.ButtonText;
				}
				set
				{
					mInstance.ButtonText = value;
				}
			}


			/// <summary>
			/// ButtonLink.
			/// </summary>
			public string ButtonLink
			{
				get
				{
					return mInstance.ButtonLink;
				}
				set
				{
					mInstance.ButtonLink = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.Description;
				}
				set
				{
					mInstance.Description = value;
				}
			}


			/// <summary>
			/// SocialLinks.
			/// </summary>
			public IEnumerable<TreeNode> SocialLinks
			{
				get
				{
					return mInstance.GetRelatedDocuments("SocialLinks");
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ContactInfo" /> class.
		/// </summary>
		public ContactInfo() : base(CLASS_NAME)
		{
			mFields = new ContactInfoFields(this);
		}

		#endregion
	}
}